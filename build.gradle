plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.145'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = '1.7.0'
group = 'dev.electrolyte.matc'

base {
    archivesName = 'matc'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', 'matc'
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', 'matc'
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', 'matc'
    }

    data {
        programArguments.addAll '--mod', 'matc', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath(), '--existing-mod', 'mysticalagriculture', '--existing-mod', 'mysticalagradditions'
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = 'BlakeBr0'
        url = 'https://maven.blakesmods.com'
    }
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"

    implementation "com.blakebr0.cucumber:Cucumber:${mc_version}-${cucumber_version}"
    implementation "com.blakebr0.mysticalagriculture:MysticalAgriculture:${mc_version}-${myst_agri_version}"
    localRuntime "com.blakebr0.mysticalagradditions:MysticalAgradditions:${mc_version}-${myst_agridditions_version}"
    localRuntime "mezz.jei:jei-${mc_version}-neoforge:${jei_version}"
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}